services:
  app:
    image: christba/7d-project-backend:latest
    pull_policy: always
    ports:
      - "3004:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5434
      - DB_USER=appuser
      - DB_PASSWORD=mysecretpassword
      - DB_NAME=my_app_db
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=miniosecretkey
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_DB=my_app_db
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - kc_pgdata:/var/lib/postgresql/data
      - ./scripts/7D_DB.sql:/docker-entrypoint-initdb.d/7D_DB.sql
      - ./scripts/contract-units.sql:/docker-entrypoint-initdb.d/contract-units.sql
      - ./scripts/mock_data.sql:/docker-entrypoint-initdb.d/mock_data.sql
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - app-network

  compass:
    image: christba/7d-compass
    pull_policy: always
    ports:
      - "3005:80"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  kc_pgdata:
  minio-data:
  ldap-data:
  ldap-config: