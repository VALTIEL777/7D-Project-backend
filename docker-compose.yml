
services:
  app:
    build: ./backend-api
    env_file: ./backend-api/.env
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${APP_DB_USER}
      - DB_PASSWORD=${APP_DB_PASSWORD}
      - DB_NAME=${APP_DB_NAME}
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
    volumes:
      - ./backend-api:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${APP_DB_USER}
      - POSTGRES_PASSWORD=${APP_DB_PASSWORD}
      - POSTGRES_DB=${APP_DB_NAME}
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - kc_pgdata:/var/lib/postgresql/data
      - ./init-scripts/keycloak-db:/docker-entrypoint-initdb.d   Add this line
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${APP_DB_USER} -d ${APP_DB_NAME}"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - app-network



  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  kc_pgdata:
  minio-data:
  ldap-data:
  ldap-config: